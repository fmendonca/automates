- name: Add a second NIC to a VM in OpenShift Virtualization
  hosts: localhost
  gather_facts: false

  vars:
    api_version: kubevirt.io/v1


  tasks:
    - name: Pegar a nova configuracao da VM
      kubernetes.core.k8s_info:
        api_version: "{{ api_version }}"
        kind: VirtualMachine
        namespace: "{{ namespace }}"
        name: "{{ vm_name }}"
      register: vm_config

    - name: Prepare new interface and network definitions
      set_fact:
        new_interfaces: "{{ vm_config.resources[0].spec.template.spec.domain.devices.interfaces | default([]) + 
                           [{'name': new_interface_name, 'model': new_interface_model, 'bridge': {}}] }}"
        new_networks: "{{ vm_config.resources[0].spec.template.spec.networks | default([]) + 
                         [{'name': new_interface_name, 'pod': {}}] }}"

    - name: Atualizando a VM com a nova NIC
      kubernetes.core.k8s:
        state: present
        api_version: "{{ api_version }}"
        kind: VirtualMachine
        namespace: "{{ namespace }}"
        name: "{{ vm_name }}"
        definition:
          spec:
            template:
              spec:
                domain:
                  devices:
                    interfaces: "{{ new_interfaces }}"
                networks: "{{ new_networks }}"

    - name: Reboot VM to apply NIC changes
      kubernetes.core.k8s:
        state: present
        api_version: "{{ api_version }}"
        kind: VirtualMachine
        namespace: "{{ namespace }}"
        name: "{{ vm_name }}"
        definition:
          spec:
            running: false

    - name: Aguardando a VM desligar
      kubernetes.core.k8s_info:
        api_version: "{{ api_version }}"
        kind: VirtualMachineInstance
        namespace: "{{ namespace }}"
        name: "{{ vm_name }}"
      register: vm_state
      until: vm_state.resources | length == 0
      retries: 20
      delay: 10

    - name: Start VM after shutdown
      kubernetes.core.k8s:
        state: present
        api_version: "{{ api_version }}"
        kind: VirtualMachine
        namespace: "{{ namespace }}"
        name: "{{ vm_name }}"
        definition:
          spec:
            running: true

    - name: Output NIC addition result
      ansible.builtin.debug:
        msg: "A second NIC connected to the Pod network has been added to the VM '{{ vm_name }}' and the VM was successfully rebooted."